# .gitlab-ci.yml
#
# ink
#
# pipelines can be triggered manually in the web


stages:
  - ink-waterfall
  - publish

variables:
  GIT_STRATEGY:                    fetch
  GIT_DEPTH:                       100
  CARGO_INCREMENTAL:               0
  CARGO_TARGET_DIR:                "/ci-cache/${CI_PROJECT_NAME}/targets/${CI_COMMIT_REF_NAME}/${CI_JOB_NAME}"
  CI_IMAGE:                        "paritytech/ink-ci-linux:production"
  PURELY_STD_CRATES:               "lang/codegen metadata engine"
  ALSO_WASM_CRATES:                "env storage storage/derive allocator prelude primitives lang lang/macro lang/ir"
  # this var is changed to "-:staging" when the CI image gets rebuilt
  # read more https://github.com/paritytech/scripts/pull/244
  ALL_CRATES:                      "${PURELY_STD_CRATES} ${ALSO_WASM_CRATES}"
  DELEGATOR_SUBCONTRACTS:          "accumulator adder subber"
  VAULT_SERVER_URL:                "https://vault.parity-mgmt-vault.parity.io"
  VAULT_AUTH_PATH:                 "gitlab-parity-io-jwt"
  VAULT_AUTH_ROLE:                 "cicd_gitlab_parity_${CI_PROJECT_NAME}"

workflow:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH

.collect-artifacts:                &collect-artifacts
  artifacts:
    name:                          "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    when:                          on_success
    expire_in:                     7 days
    paths:
      - artifacts/

.rust-info-script:                 &rust-info-script
  - rustup show
  - cargo --version
  - rustup +nightly show
  - cargo +nightly --version
  - cargo spellcheck --version
  - bash --version
  - sccache -s

.test-refs:                        &test-refs
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_COMMIT_REF_NAME == "master"
    - if: $CI_COMMIT_REF_NAME == "tags"
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                         # PRs
    - if: $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/              # i.e. v1.0, v2.1rc1

.docker-env:                       &docker-env
  image:                           "${CI_IMAGE}"
  before_script:
    - *rust-info-script
    - ./scripts/.ci/pre_cache.sh
    - sccache -s
  interruptible:                   true
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure
  tags:
    - linux-docker

.kubernetes-env:                   &kubernetes-env
  interruptible:                   true
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure
  tags:
    - kubernetes-parity-build

#### Vault secrets
.vault-secrets:                    &vault-secrets
  secrets:
    CODECOV_P_TOKEN:
      vault:                       cicd/gitlab/$CI_PROJECT_PATH/CODECOV_P_TOKEN@kv
      file:                        false
    CODECOV_TOKEN:
      vault:                       cicd/gitlab/$CI_PROJECT_PATH/CODECOV_TOKEN@kv
      file:                        false
    GITHUB_EMAIL:
      vault:                       cicd/gitlab/$CI_PROJECT_PATH/GITHUB_EMAIL@kv
      file:                        false
    GITHUB_USER:
      vault:                       cicd/gitlab/$CI_PROJECT_PATH/GITHUB_USER@kv
      file:                        false
    GITHUB_TOKEN:
      vault:                       cicd/gitlab/$CI_PROJECT_PATH/GITHUB_TOKEN@kv
      file:                        false
    PIPELINE_TOKEN:
      vault:                       cicd/gitlab/$CI_PROJECT_PATH/PIPELINE_TOKEN@kv
      file:                        false

#### stage:                        ink-waterfall

ink-waterfall:
  stage:                           ink-waterfall
  image:                           paritytech/tools:latest
  <<:                              *kubernetes-env
  <<:                              *test-refs
  <<:                              *vault-secrets
  variables:
    TRGR_PROJECT:                  ${CI_PROJECT_NAME}
    TRGR_REF:                      ${CI_COMMIT_REF_NAME}
    # The `ink-waterfall` project id in GitLab
    DWNSTRM_ID:                    409
  script:
    - ./scripts/.ci/trigger_pipeline.sh
  allow_failure:                   true
